{"version":3,"sources":["Images/International_Space_Station_white.svg.png","components/header/header.tsx","components/footer/footer.tsx","components/utils.js","components/night-region/night-region.tsx","Images/PinClipart.com_pete-the-cat-buttons_1571732.png","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","iss_logo","alt","library","add","fab","Footer","href","target","icon","daysSinceJ2000","date","getHourAngle","lng","sunPos","gst","alpha","computeLatitude","ha","Math","atan","cos","PI","tan","delta","NightRegion","props","useState","positions","setPositions","getNightRegionPositions","specificDate","julianDate","getJulianDate","Date","getGMST","latLng","sunEclPos","days","solarLongitude","anomalyOfTheSun","lambda","sin","distanceFromSun","getSunEclipticPosition","eclObliq","T","getEclipticObliquity","sunEqPos","sunEclLng","asin","floor","getSunEquatorialPosition","sunEqPosValue","i","length","useInterval","a","nightRegionPositions","Polygon","issIcon","L","iconUrl","iconSize","sunIcon","mapBounds","useStyles","makeStyles","theme","popover","pointerEvents","paper","padding","spacing","body1","height","fontFamily","fontSize","lineHeight","marginTop","FirstCenter","issLat","issLong","firstCall","map","useMap","flyTo","App","setIssLat","setIssLong","issVel","setIssVel","issAlt","setIssAlt","solarLat","setSolarLat","solarLong","setSolarLong","visibility","setVisibility","setFirstCall","crew","setCrew","spacecraft","setSpacecraft","expedition","setExpedition","patchURL","setPatchURL","expeditionURL","setExpeditionURL","anchorEl","setAnchorEl","openedSpacecraftPopoverId","setOpenedSpacecraftPopoverId","openedCrewPopoverId","setOpenedCrewPopoverId","currentEpoch","setCurrentEpoch","fetch","response","json","data","latitude","longitude","velocity","altitude","solar_lat","solar_lon","setTimeout","useEffect","spacecraftDataCall","timeNowSecs","getTime","crewDataCall","people","iss_expedition","expedition_patch","expedition_url","handleCrewPopoverClose","handleSpacecraftPopoverClose","open","Boolean","classes","FindIss","useMapEvent","seoTestData","Helmet","rel","name","content","toFixed","horizonCircle","ship","Typography","aria-owns","undefined","aria-haspopup","onMouseEnter","e","popoverId","handleSpacecraftPopoverOpen","id","onMouseLeave","url","flag_code","Popover","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","mission_patch","image","mission_type","operator","launch_vehicle","launched","MapContainer","bounds","center","zoom","scrollWheelZoom","worldCopyJump","maxBoundsViscosity","zoomControl","TileLayer","attribution","ZoomControl","position","fillColor","fillOpacity","color","Marker","Popup","Circle","radius","opacity","title","person","handleCrewPopoverOpen","country","agency","days_in_space","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fdca242.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/International_Space_Station_white.svg.b0c96d56.png\";","import \"./header.scss\";\r\nimport iss_logo from \"../../Images/International_Space_Station_white.svg.png\";\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n        <h1>International Space Station Tracker</h1>\r\n        <img src={iss_logo} alt=\"white iss stencil\"></img>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import \"./footer.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nlibrary.add(fab);\r\n\r\nconst Footer = () => (\r\n    \r\n    <div className=\"footer\">\r\n        <div className=\"footer-content\">\r\n            {/* <p className=\"footer-p\">About</p> */}\r\n            <a className=\"profile-link\" href=\"https://github.com/corquaid/react-iss-tracker\" target=\"blank\">\r\n                <FontAwesomeIcon className=\"awesome-icon\" icon={['fab', \"github\"]}/>\r\n                corquaid\r\n            </a>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Footer;\r\n","export const getJulianDate = date => (date / 86400000) + 2440587.5;\r\nexport const daysSinceJ2000 = date => date - 2451545.0;\r\n\r\nexport const getGMST = julianDate => {\r\n  const days = daysSinceJ2000(julianDate);\r\n\r\n  return (18.697374558 + 24.06570982441908 * days) % 24;\r\n}\r\n\r\nexport const getSunEclipticPosition = julianDate => {\r\n  const days = daysSinceJ2000(julianDate);\r\n  let solarLongitude = 280.460 + 0.9856474 * days;\r\n  let anomalyOfTheSun = 357.528 + 0.9856003 * days;\r\n\r\n  solarLongitude %= 360;\r\n  anomalyOfTheSun %= 360;\r\n\r\n  // ecliptic longitude of Sun\r\n  const lambda = solarLongitude + 1.915 * Math.sin(anomalyOfTheSun * Math.PI / 180) + 0.02 * Math.sin(2 * anomalyOfTheSun * Math.PI / 180);\r\n  // distance from Sun in AU\r\n  const distanceFromSun = 1.00014 - 0.01671 * Math.cos(anomalyOfTheSun * Math.PI / 180) - 0.0014 * Math.cos(2 * anomalyOfTheSun * Math.PI / 180);\r\n\r\n  return { lambda, distanceFromSun };\r\n}\r\n\r\nexport const getEclipticObliquity = julianDate => {\r\n  const days = daysSinceJ2000(julianDate);\r\n\r\n  // Julian centuries since J2000.0\r\n  const T = days / 36525;\r\n  const epsilon = 23.43929111 -\r\n    T * (46.836769 / 3600\r\n      - T * (0.0001831 / 3600\r\n        + T * (0.00200340 / 3600\r\n          - T * (0.576e-6 / 3600\r\n            - T * 4.34e-8 / 3600))));\r\n  return epsilon;\r\n}\r\n\r\nexport const getSunEquatorialPosition = (sunEclLng, eclObliq) => {\r\n  let alpha = Math.atan(Math.cos(eclObliq * Math.PI / 180)\r\n    * Math.tan(sunEclLng * Math.PI / 180)) * 180 / Math.PI;;\r\n  const delta = Math.asin(Math.sin(eclObliq * Math.PI / 180)\r\n    * Math.sin(sunEclLng * Math.PI / 180)) * 180 / Math.PI;;\r\n\r\n  const lQuadrant = Math.floor(sunEclLng / 90) * 90;\r\n  const raQuadrant = Math.floor(alpha / 90) * 90;\r\n  alpha = alpha + (lQuadrant - raQuadrant);\r\n\r\n  return { alpha, delta };\r\n}\r\n\r\nexport const getHourAngle = (lng, sunPos, gst) => {\r\n  const lst = gst + lng / 15;\r\n  return lst * 15 - sunPos.alpha;\r\n}\r\n\r\nexport const computeLatitude = (ha, sunPos) => {\r\n  const lat = Math.atan(-Math.cos(ha * Math.PI / 180) /\r\n    Math.tan(sunPos.delta * Math.PI / 180)) * 180 / Math.PI;;\r\n  return lat;\r\n}","import { useState } from \"react\";\r\nimport {\r\n    computeLatitude,\r\n    getEclipticObliquity,\r\n    getGMST,\r\n    getHourAngle,\r\n    getJulianDate,\r\n    getSunEclipticPosition,\r\n    getSunEquatorialPosition,\r\n} from \"../utils\";\r\nimport { Polygon } from \"react-leaflet\";\r\nimport useInterval from \"use-interval\";\r\n\r\nexport const NightRegion = (props: any) => {\r\n    const [positions, setPositions] = useState([]);\r\n\r\n    const getNightRegionPositions: any = (specificDate: any) => {\r\n        const date = specificDate || new Date();\r\n        const julianDate = getJulianDate(date);\r\n        const gst = getGMST(julianDate);\r\n        const latLng = [];\r\n        const sunEclPos = getSunEclipticPosition(julianDate);\r\n        const eclObliq = getEclipticObliquity(julianDate);\r\n        const sunEqPos = getSunEquatorialPosition(sunEclPos.lambda, eclObliq);\r\n        const sunEqPosValue = sunEqPos.delta < 0 ? 90 : -90;\r\n        for (let i = 0; i <= 1440; i++) {\r\n            const lng = -360 + i / 2;\r\n            const ha = getHourAngle(lng, sunEqPos, gst);\r\n            latLng[i + 1] = [computeLatitude(ha, sunEqPos), lng];\r\n        }\r\n\r\n        latLng[0] = [sunEqPosValue, -360];\r\n        latLng[latLng.length] = [sunEqPosValue, 360];\r\n\r\n        return latLng;\r\n    };\r\n\r\n    useInterval(async () => {\r\n        const nightRegionPositions = getNightRegionPositions();\r\n        setPositions(nightRegionPositions);\r\n    }, 1000);\r\n\r\n    return <Polygon positions={positions} {...props} />;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/PinClipart.com_pete-the-cat-buttons_1571732.cee1b163.png\";","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header/header.tsx\";\nimport Footer from \"./components/footer/footer\";\nimport useInterval from \"use-interval\";\nimport L from \"leaflet\";\nimport { MapContainer, useMap, TileLayer, Marker, ZoomControl, Popup, Circle, useMapEvent } from \"react-leaflet\";\n// @ts-ignore\nimport { NightRegion } from \"./components/night-region/night-region\";\nimport horizonCircle from \"../src/Images/PinClipart.com_pete-the-cat-buttons_1571732.png\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Helmet } from \"react-helmet\";\n\n// API urls\nconst orbitalDataUrl = \"https://api.wheretheiss.at/v1/satellites/25544\";\nconst spacecraftUrl = \"https://corquaid.github.io/international-space-station-APIs/JSON/iss-docked-spacecraft.json\";\nconst peopleUrl = \"https://corquaid.github.io/international-space-station-APIs/JSON/people-in-space.json\";\n\n// ISS icon\nconst issIcon = L.icon({\n    iconUrl:\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/ba/International_Space_Station_%28Expedition_58_Patch%29.svg/500px-International_Space_Station_%28Expedition_58_Patch%29.svg.png\",\n    iconSize: [70, 50],\n});\n\n// Sun position icon\nconst sunIcon = L.icon({\n    iconUrl:\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Sun_wearing_sunglasses.svg/1024px-Sun_wearing_sunglasses.svg.png\",\n    iconSize: [60, 60],\n});\n\nconst mapBounds = [\n    [-90, -180],\n    [90, 180],\n];\n\n// Styled components for Popover component\nconst useStyles = makeStyles(theme => ({\n    popover: {\n        pointerEvents: \"none\",\n    },\n    paper: {\n        padding: theme.spacing(1),\n    },\n    body1: {\n        height: \"20px\",\n        fontFamily: \"space grotesk, Arial, sans-serif\",\n        fontSize: \"14px\",\n        lineHeight: \"5px\",\n        padding: \"5px\",\n        marginTop: \"0px\",\n    },\n}));\n\n// Child component of MapContainer to centre map on ISS position on first load\nconst FirstCenter = props => {\n    const { issLat, issLong, firstCall } = props;\n    const map = useMap();\n    if (firstCall) {\n        map.flyTo([issLat, issLong]);\n    }\n    return null;\n};\n\nconst App = () => {\n    // Declare state variables\n    const [issLat, setIssLat] = useState(0);\n    const [issLong, setIssLong] = useState(0);\n    const [issVel, setIssVel] = useState(0);\n    const [issAlt, setIssAlt] = useState(0);\n    const [solarLat, setSolarLat] = useState(0);\n    const [solarLong, setSolarLong] = useState(0);\n    const [visibility, setVisibility] = useState(null);\n    const [firstCall, setFirstCall] = useState(true);\n    const [crew, setCrew] = useState([]);\n    const [spacecraft, setSpacecraft] = useState([]);\n    const [expedition, setExpedition] = useState(\"\");\n    const [patchURL, setPatchURL] = useState(\"\");\n    const [expeditionURL, setExpeditionURL] = useState(\"\");\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [openedSpacecraftPopoverId, setOpenedSpacecraftPopoverId] = useState(null);\n    const [openedCrewPopoverId, setOpenedCrewPopoverId] = useState(null);\n    const [currentEpoch, setCurrentEpoch] = useState(0);\n\n    // const { classes } = props;\n\n    // Main setInterval API call function for ISS position data\n    useInterval(async () => {\n        const response = await fetch(orbitalDataUrl);\n        const data = await response.json();\n        const { latitude, longitude, velocity, altitude, solar_lat, solar_lon, visibility } = data;\n        // console.log(altitude);\n\n        // Set new state values\n        setTimeout(() => {\n            setFirstCall(false);\n        }, 1);\n        setIssLat(latitude);\n        setIssLong(longitude);\n        setIssVel(velocity);\n        setIssAlt(altitude);\n        setVisibility(visibility);\n        setSolarLat(solar_lat);\n        // Conditional statement to account for different scales on ISS and solar longitude values\n        if (solar_lon > 180) {\n            setSolarLong(solar_lon - 360);\n        } else {\n            setSolarLong(solar_lon);\n        }\n    }, 3000);\n\n    // API call for static spacecraft and crew data\n    useEffect(() => {\n        const spacecraftDataCall = async () => {\n            const response = await fetch(spacecraftUrl);\n            const data = await response.json();\n            setSpacecraft(data.spacecraft);\n            // console.log(data.spacecraft);\n\n            // Get time since epoch on page load or \"Days In Space\" calculations\n            const timeNowSecs = Math.floor(new Date().getTime() / 1000);\n            setCurrentEpoch(timeNowSecs);\n            // console.log(timeNowSecs)\n        };\n\n        const crewDataCall = async () => {\n            const response = await fetch(peopleUrl);\n            const data = await response.json();\n\n            setCrew(data.people);\n            setExpedition(data.iss_expedition);\n            setPatchURL(data.expedition_patch);\n            setExpeditionURL(data.expedition_url);\n            // console.log(data.people)\n        };\n\n        spacecraftDataCall();\n        crewDataCall();\n    }, []);\n\n    // Handler functions and variables for Crew Popovers\n    const handleCrewPopoverOpen = (e, popoverId) => {\n        setAnchorEl(e.target);\n        setOpenedCrewPopoverId(popoverId);\n    };\n\n    const handleCrewPopoverClose = () => {\n        setAnchorEl(null);\n        setOpenedCrewPopoverId(null);\n    };\n\n    // Handler functions and variables for Spacecraft Popovers\n    const handleSpacecraftPopoverOpen = (e, popoverId) => {\n        setAnchorEl(e.target);\n        setOpenedSpacecraftPopoverId(popoverId);\n    };\n\n    const handleSpacecraftPopoverClose = () => {\n        setAnchorEl(null);\n        setOpenedSpacecraftPopoverId(null);\n    };\n    const open = Boolean(anchorEl);\n    const classes = useStyles(); // calls\n\n    // Function to recentre map on click\n    const FindIss = () => {\n        const map = useMapEvent(\"click\", () => {\n            map.flyTo([issLat, issLong], 3);\n        });\n        return null;\n    };\n\n    const seoTestData = {\n        title: \"ISS Tracker | @corquaid\",\n        description:\n            \"Track the International Space Station and see the spacecraft and astronaut crew with this App created in React.\",\n    };\n\n    return (\n        <div className=\"app-body\">\n            <Helmet>\n                <title>{seoTestData.title}</title>\n                <link rel=\"canonical\" href=\"https://corquaid.github.io/react-iss-tracker\" />\n                <meta name=\"description\" content={seoTestData.description} />\n            </Helmet>\n            <Header />\n            <div className=\"main-content\">\n                <div className=\"side-column\">\n                    <div className=\"data-panel\">\n                        <h4>Orbital Data</h4>\n                        {issLat > 0 ? (\n                            <p>Latitude: {issLat.toFixed(2)} ° N</p>\n                        ) : (\n                            <p>Latitude: {(issLat * -1).toFixed(2)} ° S</p>\n                        )}\n                        {issLong > 0 ? (\n                            <p>Longitude: {issLong.toFixed(2)} ° E</p>\n                        ) : (\n                            <p>Longitude: {(issLong * -1).toFixed(2)} ° W</p>\n                        )}\n                        <p>Velocity: {issVel.toFixed(2)} km/h</p>\n                        <p>Altitude: {issAlt.toFixed(2)} km</p>\n                        <p className=\"visibility\">ISS Visibility: {visibility}</p>\n                        <div className=\"horizon-container\">\n                            <img src={horizonCircle} alt=\"horizon indicator\"></img>\n                            <p>ISS Horizon</p>\n                        </div>\n                    </div>\n                    <p className=\"find-ISS\">Click anywhere on the map to find the ISS</p>\n                    <div className=\"data-panel\">\n                        <h4>Spacecraft @ ISS</h4>\n                        <ul>\n                            {spacecraft.map(ship => (\n                                <li key={ship.id}>\n                                    <Typography\n                                        classes={{ body1: classes.body1 }}\n                                        aria-owns={open ? \"mouse-over-popover\" : undefined}\n                                        aria-haspopup=\"true\"\n                                        onMouseEnter={e => handleSpacecraftPopoverOpen(e, ship.id)}\n                                        onMouseLeave={handleSpacecraftPopoverClose}\n                                    >\n                                        <div className=\"ship-container\">\n                                            <a href={ship.url} key={ship.id} target=\"blank\">\n                                                {ship.name}\n                                            </a>\n                                            <img\n                                                className=\"small-flag\"\n                                                src={`https://flagcdn.com/w20/${ship.flag_code}.png`}\n                                                alt=\"spacecraft flag\"\n                                            ></img>\n                                        </div>\n                                    </Typography>\n                                    <Popover\n                                        id=\"mouse-over-popover\"\n                                        className={classes.popover}\n                                        classes={{\n                                            paper: classes.paper,\n                                        }}\n                                        open={openedSpacecraftPopoverId === ship.id}\n                                        anchorEl={anchorEl}\n                                        // anchorPosition={{ top: 500, left: 200 }}\n                                        anchorOrigin={{\n                                            vertical: \"top\",\n                                            horizontal: \"right\",\n                                        }}\n                                        transformOrigin={{\n                                            vertical: \"bottom\",\n                                            horizontal: \"left\",\n                                        }}\n                                        onClose={handleSpacecraftPopoverClose}\n                                        disableRestoreFocus\n                                    >\n                                        <Typography>\n                                            <div className=\"popover-body\">\n                                                {ship.mission_patch ? (\n                                                    <img\n                                                        className=\"popover-img\"\n                                                        src={ship.mission_patch}\n                                                        alt=\"mission patch\"\n                                                    ></img>\n                                                ) : (\n                                                    <img\n                                                        className=\"popover-img\"\n                                                        src={ship.image}\n                                                        alt=\"spacecraft\"\n                                                    ></img>\n                                                )}\n                                                <div className=\"popover-info\">\n                                                    <p className=\"popover-p\">\n                                                        <strong>Name: </strong>\n                                                        {ship.name}\n                                                    </p>\n                                                    <p className=\"popover-p\">\n                                                        <strong>Mission: </strong>\n                                                        {ship.mission_type}\n                                                    </p>\n                                                    <p className=\"popover-p\">\n                                                        <strong>Operator: </strong>\n                                                        {ship.operator}\n                                                    </p>\n                                                    <p className=\"popover-p\">\n                                                        <strong>Launch Vehicle: </strong>\n                                                        {ship.launch_vehicle}\n                                                    </p>\n                                                    <p className=\"popover-p\">\n                                                        <strong>Time In Space: </strong>\n                                                        {((currentEpoch - ship.launched) / 86400).toFixed(0)} days\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </Typography>\n                                    </Popover>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n                <MapContainer\n                    bounds={mapBounds}\n                    className=\"map-container\"\n                    center={[issLat, issLong]}\n                    zoom={2}\n                    scrollWheelZoom={true}\n                    worldCopyJump={true}\n                    maxBoundsViscosity={1}\n                    zoomControl={false}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                        url=\"https://api.maptiler.com/maps/outdoor/{z}/{x}/{y}.png?key=I5jJIO0gVFZgkPhGgi1t\"\n                    />\n                    <FirstCenter issLat={issLat} issLong={issLong} firstCall={firstCall} />\n                    <ZoomControl position=\"bottomleft\" />\n                    <FindIss />\n                    <NightRegion fillColor=\"#00\" fillOpacity=\"0.6\" color=\"#00\" worldCopyJump={true} />\n                    <Marker position={[issLat, issLong]} icon={issIcon}>\n                        <Popup>\n                            <p>ISS location</p>\n                        </Popup>\n                    </Marker>\n                    <Marker position={[solarLat, solarLong]} icon={sunIcon}>\n                        <Popup>\n                            <p>Sun location</p>\n                        </Popup>\n                    </Marker>\n                    <Circle\n                        center={[issLat, issLong]}\n                        radius={2300000}\n                        color={\"#00DD00\"}\n                        fillColor={\"#00DD00\"}\n                        opacity={0.2}\n                        title={\"ISS visible horizon\"}\n                    />\n                </MapContainer>\n                <div className=\"side-column\">\n                    <div className=\"crew-panel\">\n                        <h4>ISS Crew</h4>\n                        <a className=\"expedition-p\" href={expeditionURL} target=\"blank\">\n                            Expedition {expedition}\n                        </a>\n                        <ul>\n                            {crew.map(person => (\n                                <li key={person.id}>\n                                    <Typography\n                                        classes={{ body1: classes.body1 }}\n                                        aria-owns={open ? \"mouse-over-popover\" : undefined}\n                                        aria-haspopup=\"true\"\n                                        onMouseEnter={e => handleCrewPopoverOpen(e, person.id)}\n                                        onMouseLeave={handleCrewPopoverClose}\n                                    >\n                                        <div className=\"ship-container\">\n                                            <a href={person.url} target=\"blank\">\n                                                {person.name}\n                                            </a>\n\n                                            {person.position === \"Commander\" && <p className=\"commander-p\">*</p>}\n                                            <img\n                                                className=\"small-flag-crew\"\n                                                src={`https://flagcdn.com/w20/${person.flag_code}.png`}\n                                                alt=\"spacecraft flag\"\n                                            ></img>\n                                        </div>\n                                    </Typography>\n                                    <Popover\n                                        id=\"mouse-over-popover\"\n                                        className={classes.popover}\n                                        classes={{\n                                            paper: classes.paper,\n                                        }}\n                                        open={openedCrewPopoverId === person.id}\n                                        anchorEl={anchorEl}\n                                        anchorOrigin={{\n                                            vertical: \"top\",\n                                            horizontal: \"left\",\n                                        }}\n                                        transformOrigin={{\n                                            vertical: \"bottom\",\n                                            horizontal: \"right\",\n                                        }}\n                                        onClose={handleCrewPopoverClose}\n                                        disableRestoreFocus\n                                    >\n                                        <Typography>\n                                            <div className=\"popover-body\">\n                                                <img\n                                                    className=\"popover-img\"\n                                                    src={person.image}\n                                                    alt=\"astronaut portrait\"\n                                                ></img>\n                                                <div className=\"popover-info\">\n                                                    <p className=\"popover-p\">\n                                                        <strong>Name: </strong>\n                                                        {person.name}\n                                                    </p>\n                                                    <p className=\"popover-p\">\n                                                        <strong>Nationality: </strong>\n                                                        {person.country}\n                                                    </p>\n                                                    <p className=\"popover-p\">\n                                                        <strong>Agency: </strong>\n                                                        {person.agency}\n                                                    </p>\n                                                    <p className=\"popover-p\">\n                                                        <strong>Position: </strong>\n                                                        {person.position}\n                                                    </p>\n                                                    <p className=\"popover-p\">\n                                                        <strong>Spacecraft: </strong>\n                                                        {person.spacecraft}\n                                                    </p>\n                                                    <p className=\"popover-p\">\n                                                        <strong>Career in Space: </strong>\n                                                        {(\n                                                            (currentEpoch - person.launched) / 86400 +\n                                                            person.days_in_space\n                                                        ).toFixed(0)}{\" \"}\n                                                        days\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </Typography>\n                                    </Popover>\n                                </li>\n                            ))}\n                        </ul>\n                        <p className=\"commander-p\">* commander</p>\n                        {/* <a className=\"expedition-p\" href={expeditionURL} target=\"blank\">\n                            Expedition {expedition}\n                        </a> */}\n                        <img\n                            className=\"expedition-patch\"\n                            src={patchURL}\n                            alt=\"current ISS expedition mission patch\"\n                        ></img>\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}