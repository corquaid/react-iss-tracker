{"version":3,"sources":["Images/International_Space_Station_white.svg.png","components/header/header.tsx","components/utils.jsx","components/night-region/night-region.tsx","Images/PinClipart.com_pete-the-cat-buttons_1571732.png","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","iss_logo","alt","daysSinceJ2000","date","getHourAngle","lng","sunPos","gst","alpha","computeLatitude","ha","Math","atan","cos","PI","tan","delta","seoTestData","issIcon","L","icon","iconUrl","iconSize","sunIcon","apiUrls","timeNowSecs","floor","Date","getTime","NightRegion","props","useState","positions","setPositions","getNightRegionPositions","specificDate","julianDate","getJulianDate","getGMST","latLng","sunEclPos","days","solarLongitude","anomalyOfTheSun","lambda","sin","distanceFromSun","getSunEclipticPosition","eclObliq","T","getEclipticObliquity","sunEqPos","sunEclLng","asin","getSunEquatorialPosition","sunEqPosValue","i","length","useInterval","a","nightRegionPositions","Polygon","library","add","fab","mapBounds","useStyles","makeStyles","theme","popover","pointerEvents","paper","padding","spacing","body1","height","fontFamily","fontSize","marginTop","textAlign","FirstCenter","issLat","issLong","firstCall","map","useMap","flyTo","App","setIssLat","setIssLong","issVel","setIssVel","issAlt","setIssAlt","solarLat","setSolarLat","solarLong","setSolarLong","visibility","setVisibility","setFirstCall","crew","setCrew","spacecraft","setSpacecraft","expedition","setExpedition","patchURL","setPatchURL","expeditionURL","setExpeditionURL","expeditionImage","setExpeditionImage","anchorEl","setAnchorEl","openedSpacecraftPopoverId","setOpenedSpacecraftPopoverId","openedExpPopoverId","setOpenedExpPopoverId","openedCrewPopoverId","setOpenedCrewPopoverId","currentEpoch","setCurrentEpoch","orbitalDataUrl","spacecraftUrl","peopleUrl","fetch","response","json","data","latitude","longitude","velocity","altitude","solar_lat","solar_lon","setTimeout","useEffect","spacecraftDataCall","arrayData","Object","entries","filteredData","filter","iss","console","error","crewDataCall","crewData","person","iss_expedition","expedition_patch","expedition_url","expedition_image","handleCrewPopoverClose","handleExpPopoverClose","handleSpacecraftPopoverClose","open","Boolean","classes","FindIss","useMapEvent","Helmet","rel","href","name","content","toFixed","horizonCircle","ship","Typography","aria-owns","undefined","aria-haspopup","onMouseEnter","e","popoverId","target","handleSpacecraftPopoverOpen","id","onMouseLeave","url","flag_code","Popover","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","mission_patch","image","mission_type","operator","launch_vehicle","launched","MapContainer","bounds","center","zoom","scrollWheelZoom","worldCopyJump","maxBoundsViscosity","zoomControl","TileLayer","attribution","ZoomControl","position","fillColor","fillOpacity","color","Marker","Popup","Circle","radius","opacity","title","handleExpPopoverOpen","handleCrewPopoverOpen","country","agency","days_in_space","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementsByClassName"],"mappings":"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","file":"static/js/main.ed37d623.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/International_Space_Station_white.svg.b0c96d56.png\";","import \"./header.scss\";\r\nimport iss_logo from \"../../Images/International_Space_Station_white.svg.png\";\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n        <h1>International Space Station Tracker</h1>\r\n        <img src={iss_logo} alt=\"white iss stencil\"></img>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import L from \"leaflet\";\r\n\r\n// NightRegion util functions\r\nexport const getJulianDate = date => (date / 86400000) + 2440587.5;\r\nexport const daysSinceJ2000 = date => date - 2451545.0;\r\n\r\nexport const getGMST = julianDate => {\r\n  const days = daysSinceJ2000(julianDate);\r\n\r\n  return (18.697374558 + 24.06570982441908 * days) % 24;\r\n}\r\n\r\nexport const getSunEclipticPosition = julianDate => {\r\n  const days = daysSinceJ2000(julianDate);\r\n  let solarLongitude = 280.460 + 0.9856474 * days;\r\n  let anomalyOfTheSun = 357.528 + 0.9856003 * days;\r\n\r\n  solarLongitude %= 360;\r\n  anomalyOfTheSun %= 360;\r\n\r\n  // ecliptic longitude of Sun\r\n  const lambda = solarLongitude + 1.915 * Math.sin(anomalyOfTheSun * Math.PI / 180) + 0.02 * Math.sin(2 * anomalyOfTheSun * Math.PI / 180);\r\n  // distance from Sun in AU\r\n  const distanceFromSun = 1.00014 - 0.01671 * Math.cos(anomalyOfTheSun * Math.PI / 180) - 0.0014 * Math.cos(2 * anomalyOfTheSun * Math.PI / 180);\r\n\r\n  return { lambda, distanceFromSun };\r\n}\r\n\r\nexport const getEclipticObliquity = julianDate => {\r\n  const days = daysSinceJ2000(julianDate);\r\n\r\n  // Julian centuries since J2000.0\r\n  const T = days / 36525;\r\n  const epsilon = 23.43929111 -\r\n    T * (46.836769 / 3600\r\n      - T * (0.0001831 / 3600\r\n        + T * (0.00200340 / 3600\r\n          - T * (0.576e-6 / 3600\r\n            - T * 4.34e-8 / 3600))));\r\n  return epsilon;\r\n}\r\n\r\nexport const getSunEquatorialPosition = (sunEclLng, eclObliq) => {\r\n  let alpha = Math.atan(Math.cos(eclObliq * Math.PI / 180)\r\n    * Math.tan(sunEclLng * Math.PI / 180)) * 180 / Math.PI;;\r\n  const delta = Math.asin(Math.sin(eclObliq * Math.PI / 180)\r\n    * Math.sin(sunEclLng * Math.PI / 180)) * 180 / Math.PI;;\r\n\r\n  const lQuadrant = Math.floor(sunEclLng / 90) * 90;\r\n  const raQuadrant = Math.floor(alpha / 90) * 90;\r\n  alpha = alpha + (lQuadrant - raQuadrant);\r\n\r\n  return { alpha, delta };\r\n}\r\n\r\nexport const getHourAngle = (lng, sunPos, gst) => {\r\n  const lst = gst + lng / 15;\r\n  return lst * 15 - sunPos.alpha;\r\n}\r\n\r\nexport const computeLatitude = (ha, sunPos) => {\r\n  const lat = Math.atan(-Math.cos(ha * Math.PI / 180) /\r\n    Math.tan(sunPos.delta * Math.PI / 180)) * 180 / Math.PI;;\r\n  return lat;\r\n}\r\n\r\nexport const seoTestData = {\r\n  title: \"ISS Tracker | @corquaid\",\r\n  description:\r\n      \"Track the International Space Station and see the spacecraft and astronaut crew with this App created in React.\",\r\n};\r\n\r\nexport const issIcon = L.icon({\r\n  iconUrl:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/ba/International_Space_Station_%28Expedition_58_Patch%29.svg/500px-International_Space_Station_%28Expedition_58_Patch%29.svg.png\",\r\n  iconSize: [70, 50],\r\n});\r\n\r\nexport const sunIcon = L.icon({\r\n  iconUrl:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Sun_wearing_sunglasses.svg/1024px-Sun_wearing_sunglasses.svg.png\",\r\n  iconSize: [60, 60],\r\n});\r\n\r\nexport const apiUrls = {\r\n  orbitalDataUrl: \"https://api.wheretheiss.at/v1/satellites/25544\",\r\n  spacecraftUrl: \"https://corquaid.github.io/international-space-station-APIs/JSON/iss-docked-spacecraft.json\",\r\n  peopleUrl: \"https://corquaid.github.io/international-space-station-APIs/JSON/people-in-space.json\"\r\n}\r\n\r\nexport const timeNowSecs = Math.floor(new Date().getTime() / 1000);","import { useState } from \"react\";\r\nimport {\r\n    computeLatitude,\r\n    getEclipticObliquity,\r\n    getGMST,\r\n    getHourAngle,\r\n    getJulianDate,\r\n    getSunEclipticPosition,\r\n    getSunEquatorialPosition,\r\n} from \"../utils.jsx\";\r\nimport { Polygon } from \"react-leaflet\";\r\nimport useInterval from \"use-interval\";\r\n\r\nexport const NightRegion = (props: any) => {\r\n    const [positions, setPositions] = useState([]);\r\n\r\n    const getNightRegionPositions: any = (specificDate: any) => {\r\n        const date = specificDate || new Date();\r\n        const julianDate = getJulianDate(date);\r\n        const gst = getGMST(julianDate);\r\n        const latLng = [];\r\n        const sunEclPos = getSunEclipticPosition(julianDate);\r\n        const eclObliq = getEclipticObliquity(julianDate);\r\n        const sunEqPos = getSunEquatorialPosition(sunEclPos.lambda, eclObliq);\r\n        const sunEqPosValue = sunEqPos.delta < 0 ? 90 : -90;\r\n        for (let i = 0; i <= 1440; i++) {\r\n            const lng = -360 + i / 2;\r\n            const ha = getHourAngle(lng, sunEqPos, gst);\r\n            latLng[i + 1] = [computeLatitude(ha, sunEqPos), lng];\r\n        }\r\n\r\n        latLng[0] = [sunEqPosValue, -360];\r\n        latLng[latLng.length] = [sunEqPosValue, 360];\r\n\r\n        return latLng;\r\n    };\r\n\r\n    useInterval(async () => {\r\n        const nightRegionPositions = getNightRegionPositions();\r\n        setPositions(nightRegionPositions);\r\n    }, 1000);\r\n\r\n    return <Polygon positions={positions} {...props} />;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/PinClipart.com_pete-the-cat-buttons_1571732.cee1b163.png\";","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header/header\";\nimport useInterval from \"use-interval\";\nimport { MapContainer, useMap, TileLayer, Marker, ZoomControl, Popup, Circle, useMapEvent } from \"react-leaflet\";\n// @ts-ignore\nimport { NightRegion } from \"./components/night-region/night-region\";\nimport horizonCircle from \"../src/Images/PinClipart.com_pete-the-cat-buttons_1571732.png\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Helmet } from \"react-helmet\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { seoTestData, issIcon, sunIcon, apiUrls, timeNowSecs } from \"./components/utils\";\n\n// FontAwesome library\nlibrary.add(fab);\n\nconst mapBounds = [\n    [-90, -180],\n    [90, 180],\n];\n\n// Styled components for Popover component\nconst useStyles = makeStyles(theme => ({\n    popover: {\n        pointerEvents: \"none\",\n    },\n    paper: {\n        padding: theme.spacing(1),\n    },\n    body1: {\n        height: \"20px\",\n        fontFamily: \"space grotesk, Arial, sans-serif\",\n        fontSize: \"14px\",\n        // lineHeight: \"5px\",\n        padding: \"5px\",\n        marginTop: \"0px\",\n        textAlign: \"center\",\n    },\n}));\n\n// Child component of MapContainer to centre map on ISS position on first load\nconst FirstCenter = props => {\n    const { issLat, issLong, firstCall } = props;\n    const map = useMap();\n    if (firstCall) {\n        map.flyTo([issLat, issLong]);\n    }\n    return null;\n};\n\nconst App = () => {\n    // Declare state variables\n    const [issLat, setIssLat] = useState(0);\n    const [issLong, setIssLong] = useState(0);\n    const [issVel, setIssVel] = useState(0);\n    const [issAlt, setIssAlt] = useState(0);\n    const [solarLat, setSolarLat] = useState(0);\n    const [solarLong, setSolarLong] = useState(0);\n    const [visibility, setVisibility] = useState(null);\n    const [firstCall, setFirstCall] = useState(true);\n    const [crew, setCrew] = useState([]);\n    const [spacecraft, setSpacecraft] = useState([]);\n    const [expedition, setExpedition] = useState(\"\");\n    const [patchURL, setPatchURL] = useState(\"\");\n    const [expeditionURL, setExpeditionURL] = useState(\"\");\n    const [expeditionImage, setExpeditionImage] = useState(\"\");\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [openedSpacecraftPopoverId, setOpenedSpacecraftPopoverId] = useState(null);\n    const [openedExpPopoverId, setOpenedExpPopoverId] = useState(null);\n    const [openedCrewPopoverId, setOpenedCrewPopoverId] = useState(null);\n    const [currentEpoch, setCurrentEpoch] = useState(0);\n\n    const { orbitalDataUrl, spacecraftUrl, peopleUrl } = apiUrls;\n\n    // const [dataLoading, setDataLoading] = useState(true);\n    // const [staticLoading, setStaticLoading] = useState(true);\n\n    // setInterval API call function for ISS position data\n    useInterval(async () => {\n        const response = await fetch(orbitalDataUrl);\n        const data = await response.json();\n        const { latitude, longitude, velocity, altitude, solar_lat, solar_lon, visibility } = data;\n        // console.log(altitude);\n\n        // Set new state values\n        setTimeout(() => {\n            setFirstCall(false);\n        }, 1);\n        setIssLat(latitude);\n        setIssLong(longitude);\n        setIssVel(velocity);\n        setIssAlt(altitude);\n        setVisibility(visibility);\n        setSolarLat(solar_lat);\n        // Conditional statement to account for different scales on ISS and solar longitude values\n        if (solar_lon > 180) {\n            setSolarLong(solar_lon - 360);\n        } else {\n            setSolarLong(solar_lon);\n        }\n    }, 3000);\n\n    // API call for static spacecraft and crew data\n    useEffect(() => {\n        const spacecraftDataCall = async () => {\n            try {\n                const response = await fetch(spacecraftUrl);\n                const data = await response.json();\n\n                const arrayData = Object.entries(data);\n                const filteredData = arrayData[1][1].filter(spacecraft => {\n                    return spacecraft.iss === true;\n                });\n                setSpacecraft(filteredData);\n            } catch (err) {\n                console.error(err);\n            }\n\n            // Get time since epoch on page load or \"Days In Space\" calculations\n            setCurrentEpoch(timeNowSecs);\n        };\n\n        const crewDataCall = async () => {\n            try {\n                const response = await fetch(peopleUrl);\n                const data = await response.json();\n                const arrayData = Object.entries(data);\n                // console.log(arrayData);\n                const crewData = arrayData[5][1].filter(person => {\n                    return person.iss === true;\n                });\n                setCrew(crewData); // filtered for crew data only to remove people not going to ISS\n                setExpedition(data.iss_expedition);\n                setPatchURL(data.expedition_patch);\n                setExpeditionURL(data.expedition_url);\n                setExpeditionImage(data.expedition_image);\n            } catch (err) {\n                console.error(err);\n            }\n        };\n\n        spacecraftDataCall();\n        crewDataCall();\n    }, [peopleUrl, spacecraftUrl]);\n\n    // Handler functions and variables for Crew Popovers\n    const handleCrewPopoverOpen = (e, popoverId) => {\n        setAnchorEl(e.target);\n        setOpenedCrewPopoverId(popoverId);\n    };\n\n    const handleCrewPopoverClose = () => {\n        setAnchorEl(null);\n        setOpenedCrewPopoverId(null);\n    };\n\n    // Handler functions for Expedition popover\n    const handleExpPopoverOpen = (e, popoverId) => {\n        setAnchorEl(e.target);\n        setOpenedExpPopoverId(popoverId);\n        // console.log(\"popover opened\")\n    };\n\n    const handleExpPopoverClose = () => {\n        setAnchorEl(null);\n        setOpenedExpPopoverId(null);\n    };\n\n    // Handler functions and variables for Spacecraft Popovers\n    const handleSpacecraftPopoverOpen = (e, popoverId) => {\n        setAnchorEl(e.target);\n        setOpenedSpacecraftPopoverId(popoverId);\n    };\n\n    const handleSpacecraftPopoverClose = () => {\n        setAnchorEl(null);\n        setOpenedSpacecraftPopoverId(null);\n    };\n    const open = Boolean(anchorEl);\n    const classes = useStyles(); // calls\n\n    // Function to recentre map on click\n    const FindIss = () => {\n        const map = useMapEvent(\"click\", () => {\n            map.flyTo([issLat, issLong], 3);\n        });\n        return null;\n    };\n\n    return (\n        <div className=\"app-body\">\n            <Helmet>\n                <title>{seoTestData.title}</title>\n                <link rel=\"canonical\" href=\"https://corquaid.github.io/react-iss-tracker\" />\n                <meta name=\"description\" content={seoTestData.description} />\n            </Helmet>\n            <div className=\"main-content\">\n                <Header />\n                <div className=\"data-panel panel-1\">\n                    <h4>Orbital Data</h4>\n                    {issLat > 0 ? (\n                        <p>Latitude: {issLat.toFixed(2)} ° N</p>\n                    ) : (\n                        <p>Latitude: {(issLat * -1).toFixed(2)} ° S</p>\n                    )}\n                    {issLong > 0 ? (\n                        <p>Longitude: {issLong.toFixed(2)} ° E</p>\n                    ) : (\n                        <p>Longitude: {(issLong * -1).toFixed(2)} ° W</p>\n                    )}\n                    <p>Velocity: {issVel.toFixed(2)} km/h</p>\n                    <p>Altitude: {issAlt.toFixed(2)} km</p>\n                    <p className=\"visibility\">\n                        ISS Visibility:\n                        {visibility === \"eclipsed\" ? \" In shadow\" : \" Daylight\"}\n                    </p>\n                    <div className=\"horizon-container\">\n                        <img src={horizonCircle} alt=\"horizon indicator\"></img>\n                        <p>ISS Horizon</p>\n                    </div>\n                    <p className=\"find-ISS\">Click anywhere on the map to find the ISS!</p>\n                </div>\n\n                <div className=\"spacecraft-panel panel-2\">\n                    <h4>Spacecraft @ ISS</h4>\n                    <ul>\n                        {spacecraft.map(ship => (\n                            <li key={ship.id}>\n                                <Typography\n                                    classes={{ body1: classes.body1 }}\n                                    aria-owns={open ? \"mouse-over-popover\" : undefined}\n                                    aria-haspopup=\"true\"\n                                    onMouseEnter={e => handleSpacecraftPopoverOpen(e, ship.id)}\n                                    onMouseLeave={handleSpacecraftPopoverClose}\n                                >\n                                    <div className=\"ship-container\">\n                                        <p>{ship.name}</p>\n                                        <a href={ship.url} target=\"_blank\" rel=\"noreferrer\">\n                                            <img\n                                                className=\"small-flag\"\n                                                src={`https://flagcdn.com/w20/${ship.flag_code}.png`}\n                                                alt=\"spacecraft flag\"\n                                            ></img>\n                                        </a>\n                                    </div>\n                                </Typography>\n\n                                <Popover\n                                    id=\"mouse-over-popover\"\n                                    className={classes.popover}\n                                    classes={{\n                                        paper: classes.paper,\n                                    }}\n                                    open={openedSpacecraftPopoverId === ship.id}\n                                    anchorEl={anchorEl}\n                                    anchorOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"right\",\n                                    }}\n                                    transformOrigin={{\n                                        vertical: \"center\",\n                                        horizontal: \"left\",\n                                    }}\n                                    onClose={handleSpacecraftPopoverClose}\n                                    disableRestoreFocus\n                                >\n                                    <Typography>\n                                        <span className=\"popover-body\">\n                                            {ship.mission_patch ? (\n                                                <img\n                                                    className=\"popover-img\"\n                                                    src={ship.mission_patch}\n                                                    alt=\"mission patch\"\n                                                ></img>\n                                            ) : (\n                                                <img className=\"popover-img\" src={ship.image} alt=\"spacecraft\"></img>\n                                            )}\n                                            <span className=\"popover-info\">\n                                                <p className=\"popover-p\">\n                                                    <strong>Name: </strong>\n                                                    {ship.name}\n                                                </p>\n                                                <p className=\"popover-p\">\n                                                    <strong>Mission: </strong>\n                                                    {ship.mission_type}\n                                                </p>\n                                                <p className=\"popover-p\">\n                                                    <strong>Operator: </strong>\n                                                    {ship.operator}\n                                                </p>\n                                                <p className=\"popover-p\">\n                                                    <strong>Launch Vehicle: </strong>\n                                                    {ship.launch_vehicle}\n                                                </p>\n                                                <p className=\"popover-p\">\n                                                    <strong>Time In Space: </strong>\n                                                    {((currentEpoch - ship.launched) / 86400).toFixed(0)} days\n                                                </p>\n                                            </span>\n                                        </span>\n                                    </Typography>\n                                </Popover>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <a className=\"profile-link panel-2\" href=\"https://github.com/corquaid/react-iss-tracker\" target=\"blank\">\n                    <FontAwesomeIcon className=\"awesome-icon\" icon={[\"fab\", \"github\"]} />\n                    corquaid\n                </a>\n                <MapContainer\n                    bounds={mapBounds}\n                    className=\"map-container\"\n                    center={[issLat, issLong]}\n                    zoom={2}\n                    scrollWheelZoom={true}\n                    worldCopyJump={true}\n                    maxBoundsViscosity={1}\n                    zoomControl={false}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                        url=\"https://api.maptiler.com/maps/outdoor/{z}/{x}/{y}.png?key=I5jJIO0gVFZgkPhGgi1t\"\n                    />\n                    <FirstCenter issLat={issLat} issLong={issLong} firstCall={firstCall} />\n                    <ZoomControl position=\"topleft\" />\n                    <FindIss />\n                    <NightRegion fillColor=\"#00\" fillOpacity=\"0.6\" color=\"#00\" worldCopyJump={true} />\n                    <Marker position={[issLat, issLong]} icon={issIcon}>\n                        <Popup>\n                            <p>ISS location</p>\n                        </Popup>\n                    </Marker>\n                    <Marker position={[solarLat, solarLong]} icon={sunIcon}>\n                        <Popup>\n                            <p>Sun location</p>\n                        </Popup>\n                    </Marker>\n                    <Circle\n                        center={[issLat, issLong]}\n                        radius={2300000}\n                        color={\"#00DD00\"}\n                        fillColor={\"#00DD00\"}\n                        opacity={0.2}\n                        title={\"ISS visible horizon\"}\n                    />\n                </MapContainer>\n\n                <div className=\"crew-panel panel-3\">\n                    <h4 className=\"crew-title\">ISS Crew</h4>\n                    <Typography\n                        classes={{ body1: classes.body1 }}\n                        aria-owns={open ? \"mouse-over-popover\" : undefined}\n                        aria-haspopup=\"true\"\n                        onMouseEnter={e => handleExpPopoverOpen(e, expedition)}\n                        onMouseLeave={handleExpPopoverClose}\n                    >\n                        <a className=\"expedition-p\" href={expeditionURL} target=\"blank\">\n                            Expedition {expedition}\n                        </a>\n                    </Typography>\n                    <Popover\n                        id=\"mouse-over-popover\"\n                        className={classes.popover}\n                        classes={{\n                            paper: classes.paper,\n                        }}\n                        open={openedExpPopoverId === expedition}\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: \"top\",\n                            horizontal: \"left\",\n                        }}\n                        transformOrigin={{\n                            vertical: \"bottom\",\n                            horizontal: \"right\",\n                        }}\n                        onClose={handleExpPopoverClose}\n                        disableRestoreFocus\n                    >\n                        <Typography>\n                            <span className=\"popover-body\">\n                                <img className=\"popover-img-exp\" src={expeditionImage} alt=\"expedition portrait\"></img>\n                            </span>\n                        </Typography>\n                    </Popover>\n                    <ul className=\"crew-list\">\n                        {crew.map(person => (\n                            <li key={person.id}>\n                                <Typography\n                                    classes={{ body1: classes.body1 }}\n                                    aria-owns={open ? \"mouse-over-popover\" : undefined}\n                                    aria-haspopup=\"true\"\n                                    onMouseEnter={e => handleCrewPopoverOpen(e, person.id)}\n                                    onMouseLeave={handleCrewPopoverClose}\n                                >\n                                    <div className=\"ship-container\">\n                                        <p>{person.name}</p>\n                                        {person.position === \"Commander\" && <p className=\"commander-p\">*</p>}\n                                        <a href={person.url} target=\"_blank\" rel=\"noreferrer\">\n                                            <img\n                                                className=\"small-flag-crew\"\n                                                src={`https://flagcdn.com/w20/${person.flag_code}.png`}\n                                                alt=\"spacecraft flag\"\n                                            ></img>\n                                        </a>\n                                    </div>\n                                </Typography>\n                                <Popover\n                                    id=\"mouse-over-popover\"\n                                    className={classes.popover}\n                                    classes={{\n                                        paper: classes.paper,\n                                    }}\n                                    open={openedCrewPopoverId === person.id}\n                                    anchorEl={anchorEl}\n                                    anchorOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"left\",\n                                    }}\n                                    transformOrigin={{\n                                        vertical: \"center\",\n                                        horizontal: \"right\",\n                                    }}\n                                    onClose={handleCrewPopoverClose}\n                                    disableRestoreFocus\n                                >\n                                    <Typography>\n                                        <span className=\"popover-body\">\n                                            <img\n                                                className=\"popover-img\"\n                                                src={person.image}\n                                                alt=\"astronaut portrait\"\n                                            ></img>\n                                            <span className=\"popover-info\">\n                                                <p className=\"popover-p\">\n                                                    <strong>Name: </strong>\n                                                    {person.name}\n                                                </p>\n                                                <p className=\"popover-p\">\n                                                    <strong>Nationality: </strong>\n                                                    {person.country}\n                                                </p>\n                                                <p className=\"popover-p\">\n                                                    <strong>Agency: </strong>\n                                                    {person.agency}\n                                                </p>\n                                                <p className=\"popover-p\">\n                                                    <strong>Position: </strong>\n                                                    {person.position}\n                                                </p>\n                                                <p className=\"popover-p\">\n                                                    <strong>Spacecraft: </strong>\n                                                    {person.spacecraft}\n                                                </p>\n                                                <p className=\"popover-p\">\n                                                    <strong>Mission: </strong>\n                                                    {((currentEpoch - person.launched) / 86400).toFixed(0)} days\n                                                </p>\n                                                <p className=\"popover-p\">\n                                                    <strong>Career in Space: </strong>\n                                                    {(\n                                                        (currentEpoch - person.launched) / 86400 +\n                                                        person.days_in_space\n                                                    ).toFixed(0)}{\" \"}\n                                                    days\n                                                </p>\n                                            </span>\n                                        </span>\n                                    </Typography>\n                                </Popover>\n                            </li>\n                        ))}\n                    </ul>\n                    <p className=\"commander-p\">* commander</p>\n                    <img className=\"expedition-patch\" src={patchURL} alt=\"current ISS expedition mission patch\"></img>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementsByClassName(\"root\")[0],\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}